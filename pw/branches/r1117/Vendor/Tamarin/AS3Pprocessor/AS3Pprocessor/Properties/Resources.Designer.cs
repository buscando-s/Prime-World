//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3603
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AS3Pprocessor.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "2.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("AS3Pprocessor.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to class ${ClassName} : public ${ParentClass}
        ///{
        ///public:
        ///  ${ClassName}(VTable *vtable): ${ParentClass}(vtable){}
        ///  ~${ClassName}(){}
        ///  
        ///${ClassFunctions}
        ///private:
        ///  DECLARE_SLOTS_${ClassName};
        ///};.
        /// </summary>
        internal static string ClassTemplate {
            get {
                return ResourceManager.GetString("ClassTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to   ${ReturnType} ${GetSet}${FunctionName}(${Params})
        ///  {
        ///    DebugTrace(&quot;${ClassName}::${GetSet}${FunctionName}()&quot;);
        ///    return (${ReturnType})0;
        ///  }.
        /// </summary>
        internal static string FunctionTemplate {
            get {
                return ResourceManager.GetString("FunctionTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to sources = {}
        ///
        ///sources[&apos;&apos;] = [&apos;stdafx.h&apos;,&apos;allNatives.h&apos; ]
        ///${Sources}
        ///
        ///components = [
        ///  &apos;System/SystemLog&apos;,
        ///  &apos;Vendor/Tamarin&apos;,  
        ///]
        ///platformFeatures = { &apos;win32&apos; : Win32Features( &apos;stdafx.h&apos; ) }
        ///
        ///includePaths = [ 
        ///  &apos;.&apos;,
        ///${IncludeDirs}
        ///].
        /// </summary>
        internal static string HeadersComponent {
            get {
                return ResourceManager.GetString("HeadersComponent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #pragma once
        ///#include &quot;SystemLog.h&quot;
        ///#include &quot;requiredInclude.h&quot;
        ///&amp;{Includes}
        ///namespace avmshell
        ///{
        ///${ForwardDeclaration}
        ///  
        ///${ClassBody}
        ///
        ///${ObjectClassBody}
        ///}.
        /// </summary>
        internal static string hTemplate {
            get {
                return ResourceManager.GetString("hTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to sources[&apos;${Dir}&apos;] = [&apos;${Source}&apos;].
        /// </summary>
        internal static string mapTemplate {
            get {
                return ResourceManager.GetString("mapTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to class ${ClassName}: public ${ParentClass}
        ///{
        ///public:
        ///  ${ClassName}(VTable *ivtable, ScriptObject *delegate):${ParentClass}(ivtable, delegate) {}
        ///  ~${ClassName}(void) {}
        ///
        ///${ClassFunctions}
        ///private:
        ///  DECLARE_SLOTS_${ClassName};
        ///};.
        /// </summary>
        internal static string ObjectTemplate {
            get {
                return ResourceManager.GetString("ObjectTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to import os
        ///
        ///sources = {}
        ///
        ///sources[&apos;&apos;] = [&apos;stdafx.h&apos;,&apos;allnatives.h&apos; ]
        ///
        ///for _root, dirs, files in os.walk(&apos;.&apos;):
        ///  if _root != &apos;.&apos;:
        ///    root = _root.replace(&apos;.\\&apos;, &apos;&apos;)  
        ///    sources[root] = []
        ///    for name in files:
        ///      sources[root].append(os.path.join(root, name))
        ///
        ///components = [
        ///  &apos;System/SystemLog&apos;,
        ///  &apos;Vendor/Tamarin&apos;,  
        ///]
        ///platformFeatures = { &apos;win32&apos; : Win32Features( &apos;stdafx.h&apos; ) }.
        /// </summary>
        internal static string oldComponentFile {
            get {
                return ResourceManager.GetString("oldComponentFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string requiredInclude {
            get {
                return ResourceManager.GetString("requiredInclude", resourceCulture);
            }
        }
    }
}

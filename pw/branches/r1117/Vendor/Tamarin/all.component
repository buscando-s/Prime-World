sources = {}

sources['core'] = [
  'source/core/AvmCore.cpp',	
  'source/core/AbcData.cpp',
  'source/core/AbcEnv.cpp',
  'source/core/AbcGen.cpp',
  'source/core/AbcParser.cpp',
  'source/core/ActionBlockConstants.cpp',
  'source/core/ArrayClass.cpp',
  'source/core/ArrayObject.cpp',
  'source/core/atom.cpp',
  'source/core/AtomArray.cpp',
  'source/core/avm.cpp',
  'source/core/AvmCore.cpp',
  'source/core/AvmDebug.cpp',
  'source/core/avmfeatures.cpp',
  'source/core/AvmLog.cpp',
  'source/core/avmplus.cpp',
  'source/core/avmplusDebugger.cpp',
  #'source/core/avmplusDebuggerStubs.cpp',
  'source/core/avmplusHashtable.cpp',
  'source/core/avmplusProfiler.cpp',
  'source/core/AvmPlusScriptableObject.cpp',
  'source/core/BigInteger.cpp',
  'source/core/BooleanClass.cpp',
  'source/core/BuiltinTraits.cpp',
  'source/core/CdeclThunk.cpp',     
  'source/core/ClassClass.cpp',
  'source/core/ClassClosure.cpp',
  'source/core/CodegenLIR.cpp',
  'source/core/Coder.cpp',
  'source/core/Date.cpp',
  'source/core/DateClass.cpp',
  'source/core/DateObject.cpp',
  'source/core/DescribeTypeClass.cpp',
  'source/core/Domain.cpp',
  'source/core/DomainEnv.cpp',
  'source/core/E4XNode.cpp',
  'source/core/ErrorClass.cpp',
  'source/core/ErrorConstants.cpp',
  'source/core/Exception.cpp',
  'source/core/FrameState.cpp',
  'source/core/FunctionClass.cpp',
  'source/core/instr.cpp',
  'source/core/IntClass.cpp',
  'source/core/Interpreter.cpp',
  'source/core/MathClass.cpp',
  'source/core/MathUtils.cpp',
  'source/core/MethodClosure.cpp',
  'source/core/MethodEnv.cpp',
  'source/core/MethodInfo.cpp',
  'source/core/Multiname.cpp',
  'source/core/MultinameHashtable.cpp',
  'source/core/Namespace.cpp',
  'source/core/NamespaceClass.cpp',
  'source/core/NamespaceSet.cpp',
  'source/core/NativeFunction.cpp',
  'source/core/NumberClass.cpp',
  'source/core/ObjectClass.cpp',
  'source/core/peephole.cpp',
  'source/core/PoolObject.cpp',
  'source/core/PrintWriter.cpp',
  'source/core/QCache.cpp',
  'source/core/RegExpClass.cpp',
  'source/core/RegExpObject.cpp',
  'source/core/Sampler.cpp',
  'source/core/ScopeChain.cpp',
  'source/core/ScriptBuffer.cpp',
  'source/core/ScriptObject.cpp',
  'source/core/StackTrace.cpp',
  'source/core/StringBuffer.cpp',
  'source/core/StringClass.cpp',
  'source/core/StringObject.cpp',
  'source/core/Toplevel.cpp',
  'source/core/Traits.cpp',
  'source/core/TypeDescriber.cpp',
  'source/core/UnicodeUtils.cpp',
  'source/core/VectorClass.cpp',
  'source/core/Verifier.cpp',
  'source/core/VTable.cpp',
  'source/core/wopcodes.cpp',
  'source/core/WordcodeEmitter.cpp',
  'source/core/WordcodeTranslator.cpp',
  'source/core/XMLClass.cpp',
  'source/core/XMLListClass.cpp',
  'source/core/XMLListObject.cpp',
  'source/core/XMLObject.cpp',
  'source/core/XMLParser16.cpp',
]

sources['MMgc'] = [
  'source/MMgc/GC.cpp',
  'source/MMgc/GCAlloc.cpp',
  'source/MMgc/GCLargeAlloc.cpp',
  'source/MMgc/GCObject.cpp',
  'source/MMgc/GCStack.cpp',
  'source/MMgc/FixedAlloc.cpp',
  'source/MMgc/FixedMalloc.cpp',
  'source/MMgc/GC.cpp',
  'source/MMgc/GCAlloc.cpp',
  'source/MMgc/GCAllocObject.cpp',
  'source/MMgc/GCDebug.cpp',
  'source/MMgc/GCGlobalNew.cpp',
  'source/MMgc/GCHashtable.cpp',
  'source/MMgc/GCHeap.cpp',
  'source/MMgc/GCLargeAlloc.cpp',
  'source/MMgc/GCLog.cpp',
  'source/MMgc/GCMemoryProfiler.cpp',
  'source/MMgc/GCObject.cpp',
  'source/MMgc/GCStack.cpp',
  'source/MMgc/GCTests.cpp',
  'source/MMgc/GCThreads.cpp',
  'source/MMgc/ZCT.cpp',
  'source/VMPI/MMgcPortWin.cpp',
  'source/VMPI/SpyUtilsWin.cpp',
  #'source/VMPI/SpyUtilsWinMo.cpp',
  'source/VMPI/ThreadsWin.cpp',
  'source/VMPI/WinDebugUtils.cpp',
  'source/VMPI/WinPortUtils.cpp',
]

sources['nanojit'] = [
  'source/nanojit/Allocator.cpp',
  'source/nanojit/Assembler.cpp',
  'source/nanojit/CodeAlloc.cpp',
  'source/nanojit/Containers.cpp',
  'source/nanojit/Fragmento.cpp',
  'source/nanojit/LIR.cpp',
  'source/nanojit/NativeARM.cpp',
  'source/nanojit/Nativei386.cpp',
  'source/nanojit/NativePPC.cpp',
  'source/nanojit/NativeX64.cpp',
  'source/nanojit/RegAlloc.cpp',
]

sources['pcre'] = [
  'source/pcre/pcre_chartables.cpp',
  'source/pcre/pcre_compile.cpp',
  'source/pcre/pcre_config.cpp',
  'source/pcre/pcre_exec.cpp',
  'source/pcre/pcre_fullinfo.cpp',
  'source/pcre/pcre_get.cpp',
  
  'source/pcre/pcre_globals.cpp',
  'source/pcre/pcre_info.cpp',
  'source/pcre/pcre_maketables.cpp',
  'source/pcre/pcre_newline.cpp',
  'source/pcre/pcre_ord2utf8.cpp',
  'source/pcre/pcre_refcount.cpp',
  'source/pcre/pcre_study.cpp',
  'source/pcre/pcre_tables.cpp',
  'source/pcre/pcre_try_flipped.cpp',
  'source/pcre/pcre_valid_utf8.cpp',
  'source/pcre/pcre_version.cpp',
  'source/pcre/pcre_xclass.cpp',
]

sources['platform'] = [ 
  'source/platform/win32/MathUtilsWin.cpp',
  'source/platform/win32/OSDepWin.cpp',
]


includePaths = [ 
	'.',
    'source/VMPI', 
    'source/platform', 
    'source/core', 
    'source/MMgc',
    'source/eval',
    'source/pcre', 
    'source/shell',
    'source/extensions',
]

type = 'lib'
inline = False

compilerKeys = ['/wd4242', '/wd4201', '/wd4505',]

defines = [
    'USE_REAL2INT',
    '_CRT_SECURE_NO_DEPRECATE',
]

if configuration == "debug":
    defines.extend( [ "DEBUGGER" ] )

components = [
    'Vendor/Libc',
]

libDependencies = [
    'winmm.lib',
]

platformFeatures = { 'win32' : Win32Features( 'TamarinPCH.h') }
